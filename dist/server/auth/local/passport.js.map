{"version":3,"sources":["auth/local/passport.js"],"names":["setup","localAuthenticate","User","email","password","done","findOne","toLowerCase","activeToken","exec","then","user","message","authenticate","authError","authenticated","catch","err","use","usernameField","passwordField"],"mappings":";;;;;QA4BgBA,K,GAAAA,K;;AA5BhB;;;;AACA;;;;AAEA,SAASC,iBAAT,CAA2BC,IAA3B,EAAiCC,KAAjC,EAAwCC,QAAxC,EAAkDC,IAAlD,EAAwD;AACtDH,OAAKI,OAAL,CAAa;AACXH,WAAOA,MAAMI,WAAN,EADI;AAEXC,iBAAa;AAFF,GAAb,EAGGC,IAHH,GAIGC,IAJH,CAIQ,gBAAQ;AACZ,QAAG,CAACC,IAAJ,EAAU;AACR,aAAON,KAAK,IAAL,EAAW,KAAX,EAAkB;AACvBO,iBAAS;AADc,OAAlB,CAAP;AAGD;AACDD,SAAKE,YAAL,CAAkBT,QAAlB,EAA4B,UAASU,SAAT,EAAoBC,aAApB,EAAmC;AAC7D,UAAGD,SAAH,EAAc;AACZ,eAAOT,KAAKS,SAAL,CAAP;AACD;AACD,UAAG,CAACC,aAAJ,EAAmB;AACjB,eAAOV,KAAK,IAAL,EAAW,KAAX,EAAkB,EAAEO,SAAS,+BAAX,EAAlB,CAAP;AACD,OAFD,MAEO;AACL,eAAOP,KAAK,IAAL,EAAWM,IAAX,CAAP;AACD;AACF,KATD;AAUD,GApBH,EAqBGK,KArBH,CAqBS;AAAA,WAAOX,KAAKY,GAAL,CAAP;AAAA,GArBT;AAsBD;;AAEM,SAASjB,KAAT,CAAeE,IAAf,CAAmB,YAAnB,EAAiC;AACtC,qBAASgB,GAAT,CAAa,4BAAkB;AAC7BC,mBAAe,OADc;AAE7BC,mBAAe,UAFc,CAEH;AAFG,GAAlB,EAGV,UAASjB,KAAT,EAAgBC,QAAhB,EAA0BC,IAA1B,EAAgC;AACjC,WAAOJ,kBAAkBC,IAAlB,EAAwBC,KAAxB,EAA+BC,QAA/B,EAAyCC,IAAzC,CAAP;AACD,GALY,CAAb;AAMD","file":"passport.js","sourcesContent":["import passport from 'passport';\nimport {Strategy as LocalStrategy} from 'passport-local';\n\nfunction localAuthenticate(User, email, password, done) {\n  User.findOne({\n    email: email.toLowerCase(),\n    activeToken: null\n  }).exec()\n    .then(user => {\n      if(!user) {\n        return done(null, false, {\n          message: 'This email is not registered.'\n        });\n      }\n      user.authenticate(password, function(authError, authenticated) {\n        if(authError) {\n          return done(authError);\n        }\n        if(!authenticated) {\n          return done(null, false, { message: 'This password is not correct.' });\n        } else {\n          return done(null, user);\n        }\n      });\n    })\n    .catch(err => done(err));\n}\n\nexport function setup(User/*, config*/) {\n  passport.use(new LocalStrategy({\n    usernameField: 'email',\n    passwordField: 'password' // this is the virtual field on the model\n  }, function(email, password, done) {\n    return localAuthenticate(User, email, password, done);\n  }));\n}\n"]}